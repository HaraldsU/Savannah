// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Savanna.Data.Models.DB;

#nullable disable

namespace Savanna.Data.Migrations
{
    [DbContext(typeof(SavannaContext))]
    partial class SavannaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Savanna.Data.Base.AnimalBase", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalId"));

                    b.Property<int>("ActiveBreedingCooldown")
                        .HasColumnType("int");

                    b.Property<int>("AnimalType")
                        .HasColumnType("int");

                    b.Property<int>("BreedingCooldown")
                        .HasColumnType("int");

                    b.Property<int>("BreedingTime")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLetter")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<float>("Health")
                        .HasColumnType("real");

                    b.Property<bool>("IsBirthing")
                        .HasColumnType("bit");

                    b.Property<int>("KeyBind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("AnimalId");

                    b.ToTable("AnimalBase");
                });

            modelBuilder.Entity("Savanna.Data.Models.DB.GameStateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentTypeIndex")
                        .HasColumnType("int");

                    b.Property<int>("Dimensions")
                        .HasColumnType("int");

                    b.Property<int>("Turn")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameState");
                });

            modelBuilder.Entity("Savanna.Data.Models.GridCellModel", b =>
                {
                    b.Property<int>("CellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CellId"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int?>("GameStateId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("CellId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("GameStateId");

                    b.ToTable("GridCellModel");
                });

            modelBuilder.Entity("Savanna.Data.Models.GridCellModel", b =>
                {
                    b.HasOne("Savanna.Data.Base.AnimalBase", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId");

                    b.HasOne("Savanna.Data.Models.DB.GameStateModel", null)
                        .WithMany("Grid")
                        .HasForeignKey("GameStateId");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Savanna.Data.Models.DB.GameStateModel", b =>
                {
                    b.Navigation("Grid");
                });
#pragma warning restore 612, 618
        }
    }
}
